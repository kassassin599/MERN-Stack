                   // 1. Introduction to JavaScript
// What is JavaScript?
// JavaScript is a versatile programming language primarily used for creating interactive and dynamic content on the web. It can be used on both the client-side (in the browser) and server-side (using Node.js).

xample
// Let's start with a simple "H// Hello World Eello, World!" program.

// In the Browser Console
// Open your browser's developer tools (usually by pressing F12 or right-clicking and selecting "Inspect") and go to the "Console" tab. Type the following code and press Enter:

console.log("Hello, World!");




// In an HTML File
// Create an HTML file (e.g., index.html) with the following content:



    <script>
        console.log("Hello, World!");
    </script>




                                    // 2. Basic Syntax
// JavaScript Code Structure
// JavaScript code can be written directly in an HTML file within <script> tags or in a separate .js file.



                                        // Comments
// Comments are used to explain code or to prevent execution.

                                    // Single-line comment:

// This is a single-line comment
console.log("Hello, World!");

                                // Multi-line comment:
/* This is a 
   multi-line comment */
   console.log("Hello, World!");



                        // 3. Variables and Data Types
// Variables
// Variables are used to store data. In JavaScript, you can declare variables using var, let, or const.

                                // var

var a = "this is varrrrrrrrrrrrrrrrrr";
var a = "this is 2nd varrrrrrrrrrrrrrrrrr";
 a = "this is 3rd varrrrrrrrrrrrrrrrrr";

                                    // let
let b = "hello from let";
let b = "hello updated"; // An error in this line
b = "this is udated";
document.write(b + "<br>");

                                    // const
const c = 20;
// const c = 20; //An error in this line
// c = 30;
document.write(c + "<br>");

// var (older way, function-scoped)

var message = "Hello, World!";
console.log(message);

// let (block-scoped, recommended for most cases)
let message = "Hello, World!";
console.log(message);

// const (block-scoped, used for constants)
const message = "Hello, World!";
console.log(message);



                            // Data Types
// JavaScript has several data types:

                                    // String: Text data
let name = "technoglobe";
document.write(name + "<br>");




                                    // Number: Numeric data
let age = 25;
document.write(age + "<br>");




                                    // Boolean: True or false
let isStudent = true;
document.write(isStudent + "<br>");




                                // Null: Empty or non-existent value
let emptyValue = null;
document.write(emptyValue + "<br>");



                                // Object: Complex data structures
let person = { firstName: "IT", lastName: "Desk" };
document.write(person[firstName]);

document.write(person.firstName + " " + person.lastName);
console.log(`${person.firstName + person.lastName} ${person.lastName}`); // Output: techno globe



                                // Array: List of values
let numbers = [1, 2, 3, 4, 5];
document.write(numbers + "<br>");

console.log(numbers); // Output: [1, 2, 3, 4, 5]





----------------------------------------------------------------------------------------------------------------------------------------------------





//                                     Operators

// Operators in JavaScript are used to perform operations on variables and values. They are classified into different categories:



Arithmetic Operators



+ (Addition): Adds two numbers.



let a = 5;

let b = 3;

let sum = a + b; // 8





- (Subtraction): Subtracts one number from another.



let difference = a - b; // 2





* (Multiplication): Multiplies two numbers.



let product = a * b; // 15





/ (Division): Divides one number by another.



let quotient = a / b; // 1.6667





% (Modulus): Returns the remainder of a division.



let remainder = a % b; // 2





++ (Increment): Increases a number by one.



let c = 10;

c++; // 11





-- (Decrement): Decreases a number by one.



c--; // 10





Assignment Operators



= (Assignment): Assigns a value to a variable.



let x = 10;





+= (Addition Assignment): Adds a value to a variable.



x += 5; // x = x + 5; // 15





-= (Subtraction Assignment): Subtracts a value from a variable.



x -= 3; // x = x - 3; // 12





*= (Multiplication Assignment): Multiplies a variable by a value.



x *= 2; // x = x * 2; // 24





/= (Division Assignment): Divides a variable by a value.



x /= 4; // x = x / 4; // 6





%= (Modulus Assignment): Applies modulus to a variable.



x %= 3; // x = x % 3; // 0





Comparison Operators



== (Equal to): Checks if two values are equal.

a = 5 ;

b = 5 ;

let isEqual = (a == b); // true





=== (Strict Equal to): Checks if two values and their types are equal.



a = "5" ;

b = 12 ;

let isStrictEqual = (a === b); // false





!= (Not Equal to): Checks if two values are not equal.



let isNotEqual = (a != b); // true





!== (Strict Not Equal to): Checks if two values and their types are not equal.

a = "50" ;

b = 45 ;

let isStrictNotEqual = (a !== b); // true





> (Greater than): Checks if one value is greater than another.

a = 50 ;

b = 45 ;



let isGreater = (a > b); // true





< (Less than): Checks if one value is less than another.

a = 48 ;

b = 45 ;



let isLess = (a < b); // false





>= (Greater than or Equal to): Checks if one value is greater than or equal to another.

a = 48 ;

b = 50 ;



let isGreaterOrEqual = (a >= b); // true





<= (Less than or Equal to): Checks if one value is less than or equal to another.

a = 48 ;

b = 50 ;





let isLessOrEqual = (a <= b); // false





Logical Operators



&& (Logical AND): Returns true if both operands are true.

a = 48 ;

b = 50 ;


                  true      true  = true
                  false      true  = false
                  true      false  = false
                  false      false  = false
let andResult = (a > b  && b > 1 ); // true





|| (Logical OR): Returns true if at least one operand is true.

a = 48 ;

b = 50 ;


                  false      false  = false
                  true      true  = true
                  false      true  = true
                  true      false  = true
let orResult = (a > b || b > 5); // true





! (Logical NOT): Returns true if the operand is false.





let notResult = !(a > b); // false





                    Practical Examples



                  Calculate the Area of a Circle



let radius = 5;

const pi = 3.14159;

let area = pi * radius * radius;

console.log("Area of the circle:", area); // Area of the circle: 78.53975

Document.write();



                    Check Voting Eligibility

let age = 18;

if (age >= 17) {

    console.log("You are eligible to vote.");

}



else {

    console.log("You are not eligible to vote.");

}


